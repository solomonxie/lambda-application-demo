swagger: "2.0"

info:
  title: API GATEWAY HTTP API
  description: API description in Markdown.
  version: 1.0.0

x-app-info:
  type: AWS::ApiGateway::HttpApi
  name: "demo-api-1"
  throttling:
    rate-limit: 100
    burst-limit: 200

# basePath: /

paths:
  /status:
    get:
      summary: status check
      x-throttling:
        rate-limit: 100
        burst-limit: 50
      x-lambda:
        name: "lambda-demo-func-get-status"
        runtime: python3.8
        arch: x86_64
        preserve: 0
        upload-ignore:
          - iam/*
          - utils/*
          - scripts/*
        handler: application.services.service1.lambda_handlers.status_handler
        layers:
          - type: python-requirements
            manifest: ./application/services/service1/requirements.txt
        role-name: "Lambda-General-Execution-Role"
      responses:
        "200":
          description: OK
  /user:
    get:
      summary: Returns a user by ID.
      x-api-authorizer:
        type: AWS_IAM
      x-lambda:
        name: "lambda-demo-func-get-user"
        runtime: python3.8
        upload-ignore:
          - iam/*
          - utils/*
          - scripts/*
        handler: application.services.service2.lambda_handlers.user_handler
        role-name: "Lambda-General-Execution-Role"
      parameters:
        - in: query
          name: user_id
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
  # /vpc:
  #   get:
  #     summary: Check Lambda VPC
  #     x-lambda:
  #       name: "lambda-demo-func-test-vpc"
  #       runtime: python3.8
  #       arch: x86_64
  #       upload-dir:
  #         - ./core
  #       handler: application.services.vpc_service.lambda_handlers.vpc_handler
  #       role-name: "Lambda-General-Execution-Role"
  #       layers:
  #         - type: python-requirements
  #           manifest: ./core/requirements_abc_service.txt
  #       vpc:
  #         subnet_ids: "${AWS_LAMBDA_VPC_SUBNET_IDS}"
  #         sec_group_ids: "${AWS_LAMBDA_VPC_SECURITY_GROUP_IDS}"
  #     responses:
  #       "200":
  #         description: OK

definitions:
  User:
    properties:
      id:
        type: integer
      name:
        type: string
    # Both properties are required
    required:
      - id
      - name
