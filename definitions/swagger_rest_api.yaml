swagger: "2.0"

info:
  title: API GATEWAY REST API
  description: API description in Markdown.
  version: 1.0.0

x-aws-api-info:
  type: AWS::ApiGateway::RestApi
  name: "demo-rest-api-2"
  throttling:
    rate-limit: 100
    burst-limit: 200
  vpc-endpoint-ids:
    - 1234
    - 5678

# basePath: /

paths:
  /stats/health/status:
    get:
      summary: status check
      x-lambda:
        name: "lambda-demo-func-get-status"
        runtime: python3.8
        arch: x86_64
        handler: application.services.service1.lambda_handlers.status_handler
        role-name: "Lambda-General-Execution-Role"
        layers:
          - type: python-requirements
            manifest: ./application/services/service1/requirements.txt
        upload-ignore:
          - iam/*
          - utils/*
          - scripts/*
      responses:
        "200":
          description: OK
  /stats/user:
    get:
      summary: Returns a user by ID.
      x-api-authorizer:
        type: AWS_IAM
      x-lambda:
        name: "lambda-demo-func-get-user"
        runtime: python3.8
        handler: application.services.service2.lambda_handlers.user_handler
        role-name: "Lambda-General-Execution-Role"
        upload-ignore:
          - iam/*
          - utils/*
          - scripts/*
      parameters:
        - in: query
          name: user_id
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'

definitions:
  User:
    properties:
      id:
        type: integer
      name:
        type: string
    # Both properties are required
    required:
      - id
      - name
